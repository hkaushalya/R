{
    "contents" : "rm(list=ls())\nsetwd('/Users/samantha/Documents/Personal/Samantha/LearningMaterials/IntroToR/KaggleCompetitions/FacialKeypointsDetection/')\nload('data.Rd')\n\n#===============================================================\n# show one or more sample image from the train data\n# with several features highlighted\n#\n# Inputs : row.no : number of a sequence of row numbers\n# Outputs: draws the image/s with some features highlighted\n#===============================================================\nSampleImage <- function(row.no) {\n  for (r in row.no) {\n    im <- matrix(data=rev(im.train[r,]), nrow=96, ncol=96)\n    image(1:96, 1:96, im, col=gray((0:255)/255))\n    points(96-d.train$nose_tip_x[r],         96-d.train$nose_tip_y[r],         col=\"red\")\n    points(96-d.train$left_eye_center_x[r],  96-d.train$left_eye_center_y[r],  col=\"blue\")\n    points(96-d.train$right_eye_center_x[r], 96-d.train$right_eye_center_y[r], col=\"green\")\n  }\n}\n#===============================================================\n# This is to overlay certain feature in all images\n# on top of one sample image to see how dispersed that\n# feature in the train data.\n#\n# Inputs: r: row number\n#         feature: feature to draw (nose, eye etc)\n# Output: Draws a sample image(r) and overlay selected feature\n#         of all other images in the train data\n#===============================================================\nSampleImFtOverlaid <- function(r, feature) {\n  SampleImage(r)\n  if (feature=='nose' || feature =='all') {\n    for(i in 1:nrow(d.train)) {\n      points(96-d.train$nose_tip_x[i], 96-d.train$nose_tip_y[i], col=\"red\")\n    }\n  } else if (feature=='lefteye') {\n    for(i in 1:nrow(d.train)) {\n      points(96-d.train$left_eye_center_x[i],  96-d.train$left_eye_center_y[i],  col=\"blue\")\n    }\n  } else if (feature=='righteye') {\n    for(i in 1:nrow(d.train)) {\n      points(96-d.train$right_eye_center_x[i], 96-d.train$right_eye_center_y[i], col=\"green\")\n    }\n  }\n}\n\nColorGradientPlot <- function(r, feature) {\n  SampleImage(r)\n  for(i in 1:nrow(d.train)) {\n    points(96-d.train$left_eye_center_x[i],  96-d.train$left_eye_center_y[i],  col=\"blue\")\n  }\n}\n\nNACheck <-function(df) {\n  print(paste(\"======= Missing Value Report ======\"))\n  ncols <- ncol(df)\n  for (c in 1:ncols) {\n    na.rows <- which(is.na(df[,c]))\n    row.name <- names(d.train)[c]\n    print(paste(row.name,' has ' , length(na.rows), '\\n' ))\n  }\n}\n\n# Fill in NAs with mean for that column\nImputeNAs.vec <-function(vec) {\n  vec[is.na(vec)] <- mean(vec, na.rm =T)\n}\n# Fill in NAs in a whole data frame\n# with corresponding column mean\nImputNas.df <- function(df) {\n  ncols <- ncol(df)\n  for (c in 1:ncols) {\n    ImputeNAs.vec(df[,c])\n  }  \n}\n\n## This is for study only\npar(mfrow=c(2,2))\nSampleImage(13)\nSampleImFtOverlaid(1,'righteye')\nplot(d.train$left_eye_center_x, d.train$right_eye_center_x)\nplot(abs(d.train$left_eye_center_x-d.train$right_eye_center_x))\nplot(abs(d.train$left_eye_center_y-d.train$right_eye_center_y))\neye.dist.x <- d.train$left_eye_center_x - d.train$right_eye_center_x\neye.dist.y <- d.train$left_eye_center_y - d.train$right_eye_center_y\neye.dist <- sqrt(eye.dist.x * eye.dist.x + eye.dist.y + eye.dist.y )\nplot(eye.dist)\nhist(eye.dist)\n\nleye.nose.dist.x <- d.train$left_eye_center_x - d.train$nose_tip_x\nleye.nose.dist.y <- d.train$left_eye_center_y - d.train$nose_tip_y\nleye.nose.dist   <- sqrt(leye.nose.dist.x * leye.nose.dist.x + leye.nose.dist.y + leye.nose.dist.y )\nplot(leye.nose.dist.x)\nhist(leye.nose.dist)\nleye.nose.dist.y\nleye.nose.dist.x[which(is.na(leye.nose.dist.x))]\n\nsummary(abs(d.train$left_eye_center_x-d.train$right_eye_center_x))\nboxplot(abs(d.train$left_eye_center_x-d.train$right_eye_center_x))\n\nNACheck(d.train)\n\n\n#split train data\nfrac <- 0.7\nnrows <- nrow(d.train)\nsplit.row <- floor(nrows * frac)\nd.train1 <- d.train[1:split.row,]\nd.train2 <- d.train[split.row+1:nrows,]\n\n\n\n\n\n#library(randomForest)\n\n#rf <- randomForest(left_eye_center_x ~ left_eye_inner_corner_x+ )\n",
    "created" : 1384138858163.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3281474594",
    "id" : "81AD5BB4",
    "lastKnownWriteTime" : 1384200260,
    "path" : "~/Documents/Personal/Samantha/LearningMaterials/IntroToR/KaggleCompetitions/FacialKeypointsDetection/FacialKeyPoints.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}